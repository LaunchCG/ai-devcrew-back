import requests
from requests.auth import HTTPBasicAuth
import os
from datetime import datetime

JIRA_EMAIL = os.getenv("JIRA_EMAIL")
JIRA_API_TOKEN = os.getenv("JIRA_API_TOKEN")
JIRA_DOMAIN = os.getenv("JIRA_DOMAIN")

auth = HTTPBasicAuth(JIRA_EMAIL, JIRA_API_TOKEN)
headers = {
    "Accept": "application/json",
    "Content-Type": "application/json"
}


def build_comment_from_review(review: dict) -> str:
    lines = []

    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M")
    lines.append(f"ðŸ§  *Generated by GizmoBot on {timestamp}*")
    lines.append("---")

    if review.validation:
        lines.append(f"**Validation Result:** {review.validation}")

    if review.issues:
        lines.append("**Detected Issues:**")
        lines += [f"- {issue}" for issue in review.issues]

    if review.suggestions:
        lines.append("**Suggestions for Improvement:**")
        lines += [f"- {suggestion}" for suggestion in review.suggestions]

    if review.acceptance_criteria_check:
        lines.append(f"**Acceptance Criteria Check:** {review.acceptance_criteria_check}")

    if review.qa_testability:
        lines.append(f"**QA Testability:** {review.qa_testability}")

    return "\n".join(lines)


def post_comments_to_jira(reviews: list):
    results = []

    for review in reviews:
        issue_key = review.story
        if not issue_key:
            results.append({"story": None, "status": "error", "detail": "Missing story ID"})
            continue

        comment_body = build_comment_from_review(review)
        url = f"https://{JIRA_DOMAIN}/rest/api/3/issue/{issue_key}/comment"
        payload = {
            "body": {
                "type": "doc",
                "version": 1,
                "content": [
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": comment_body
                            }
                        ]
                    }
                ]
            }
        }


        response = requests.post(url, json=payload, headers=headers, auth=auth)

        results.append({
            "story": issue_key,
            "status": response.status_code,
            "response": response.json() if response.ok else response.text
        })

    return results
